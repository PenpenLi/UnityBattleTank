//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: UpgradeBuildingResponses.proto
// Note: requires additional types generated from: ApiResponse.proto
// Note: requires additional types generated from: Unlock.proto
// Note: requires additional types generated from: Unit.proto
namespace SlgPB
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"UpgradeBuildingResponses")]
  public partial class UpgradeBuildingResponses : global::ProtoBuf.IExtensible
  {
    public UpgradeBuildingResponses() {}
    
    private ApiResponse _response = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"response", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public ApiResponse response
    {
      get { return _response; }
      set { _response = value; }
    }
    private readonly global::System.Collections.Generic.List<Unlock> _unlock = new global::System.Collections.Generic.List<Unlock>();
    [global::ProtoBuf.ProtoMember(2, Name=@"unlock", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Unlock> unlock
    {
      get { return _unlock; }
    }
  
    private readonly global::System.Collections.Generic.List<Unit> _units = new global::System.Collections.Generic.List<Unit>();
    [global::ProtoBuf.ProtoMember(3, Name=@"units", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<Unit> units
    {
      get { return _units; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}